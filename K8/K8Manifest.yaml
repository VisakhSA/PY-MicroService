apiVersion: v1
kind: Service
metadata:
  name: mylegendapi
spec:
  selector:
    app: mylegendapi
  ports:
    - name: http
      protocol: TCP
      port: 81
      targetPort: 81
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mylegendapi
spec:
  selector:
    matchLabels:
      app: mylegendapi
  replicas: 1
  template:
    metadata:
      labels:
        app: mylegendapi
    spec:
      containers:
        - name: mylegendapi
          image: dockervisakh/legendimg:latest
          ports:
            - name: http
              containerPort: 81
          env:
            - name: mysportapi
              value: mysportapi
            - name: mymongo
              value: mymongo
          livenessProbe:
            httpGet:
              path: /legends
              port: 81
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /legends
              port: 81
            initialDelaySeconds: 10
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mysportapi
spec:
  selector:
    app: mysportapi
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysportapi
spec:
  selector:
    matchLabels:
      app: mysportapi
  replicas: 1
  template:
    metadata:
      labels:
        app: mysportapi
    spec:
      containers:
        - name: mysportapi
          image: dockervisakh/sportimg:latest
          ports:
            - name: http
              containerPort: 80
          env:
            - name: mylegendapi
              value: mylegendapi
            - name: mymongo
              value: mymongo
          livenessProbe:
            httpGet:
              path: /sports
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /sports
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mymongo
spec:
  selector:
    app: mymongo
  ports:
    - name: mongo
      protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mymongo
spec:
  selector:
    matchLabels:
      app: mymongo
  serviceName: "mymongo"
  replicas: 1
  template:
    metadata:
      labels:
        app: mymongo
    spec:
      containers:
        - name: mymongo
          image: dockervisakh/mongoapp:latest
          volumeMounts:
            - name: mymongodata-pvc
              mountPath: "/data/db"
  volumeClaimTemplates:
    - metadata:
        name: mymongodata-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        storageClassName: do-block-storage
---
kind: Service
apiVersion: v1
metadata:
  name: legend-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: mylegendapi
  ports:
    - name: http
      protocol: TCP
      port: 81
      targetPort: 81
---
kind: Service
apiVersion: v1
metadata:
  name: sport-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: mysportapi
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80

